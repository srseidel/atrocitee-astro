---
import { createServerSupabaseClient } from "@lib/supabase/client";
import AdminLayout from "@layouts/AdminLayout.astro";

// Server-side rendering for authentication
export const prerender = false;

// Authentication is handled by middleware

const supabase = createServerSupabaseClient({ 
  cookies: Astro.cookies,
  request: Astro.request
});

// Get all orders with customer information
const { data: orders, error: ordersError } = await supabase
  .from('orders')
  .select(`
    id,
    created_at,
    total_amount,
    status,
    payment_status,
    customer_email,
    customer_name,
    user_id,
    charity_amount
  `)
  .order('created_at', { ascending: false });

if (ordersError) {
  console.error('Error fetching orders:', ordersError);
}
---

<AdminLayout title="Orders Management">
  <div class="container mx-auto p-6">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-3xl font-bold">Orders</h1>
      <div class="flex space-x-3">
        <a href="/admin/dashboard" class="btn btn-secondary">‚Üê Back to Dashboard</a>
      </div>
    </div>
    
    {ordersError && (
      <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
        <p class="text-red-800">Error loading orders: {ordersError.message}</p>
      </div>
    )}
    
    {orders && orders.length > 0 ? (
      <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div class="overflow-x-auto">
          <table class="min-w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Order ID</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Date</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Customer</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Amount</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Donation</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase">Payment</th>
                <th class="py-3 px-4 text-right text-xs font-medium text-gray-500 uppercase">Action</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
              {orders.map((order) => (
                <tr>
                  <td class="py-3 px-4 whitespace-nowrap text-sm font-mono">
                    {order.id.substring(0, 8)}...
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm">
                    {new Date(order.created_at).toLocaleDateString()}
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm">
                    {order.customer_name || 'N/A'}
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm">
                    {order.customer_email}
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm font-semibold">
                    ${order.total_amount.toFixed(2)}
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm text-green-600">
                    ${(order.charity_amount || 0).toFixed(2)}
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm">
                    <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                      ${order.status === 'delivered' ? 'bg-green-100 text-green-800' : 
                        order.status === 'shipped' ? 'bg-blue-100 text-blue-800' :
                        order.status === 'processing' ? 'bg-yellow-100 text-yellow-800' : 
                        order.status === 'cancelled' ? 'bg-red-100 text-red-800' : 
                        'bg-gray-100 text-gray-800'}`}>
                      {order.status}
                    </span>
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-sm">
                    <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                      ${order.payment_status === 'paid' ? 'bg-green-100 text-green-800' : 
                        order.payment_status === 'pending' ? 'bg-yellow-100 text-yellow-800' : 
                        order.payment_status === 'failed' ? 'bg-red-100 text-red-800' :
                        'bg-gray-100 text-gray-800'}`}>
                      {order.payment_status}
                    </span>
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap text-right text-sm">
                    <a 
                      href={`/admin/orders/${order.id}`} 
                      class="text-blue-600 hover:text-blue-900 font-medium"
                    >
                      View
                    </a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    ) : (
      <div class="bg-white rounded-lg shadow-md p-8 text-center">
        <div class="mx-auto w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4">
          <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
          </svg>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No orders found</h3>
        <p class="text-gray-500 mb-6">
          When customers place orders, they will appear here.
        </p>
      </div>
    )}
  </div>
</AdminLayout>
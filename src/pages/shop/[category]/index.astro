---
import { createClient } from '@supabase/supabase-js';
import Layout from '@layouts/Layout.astro';
import type { Database } from '@local-types/database/schema';
import type { GetStaticPaths } from 'astro';

// Enable static generation for this page
export const prerender = true;

type Product = Database['public']['Tables']['products']['Row'];
type ProductVariant = Database['public']['Tables']['product_variants']['Row'];
type Category = Database['public']['Tables']['atrocitee_categories']['Row'];

interface ProductWithCategory extends Product {
  product_variants: ProductVariant[];
  atrocitee_categories: Category;
}

// Get all categories and their products at build time
export const getStaticPaths = (async () => {
  // Create a static Supabase client for build time
  const supabase = createClient(
    import.meta.env.PUBLIC_SUPABASE_URL,
    import.meta.env.PUBLIC_SUPABASE_ANON_KEY
  );

  // Get all active categories
  const { data: categories } = await supabase
    .from('atrocitee_categories')
    .select('*')
    .eq('is_active', true) as { data: Category[] | null };

  // Get all published products with their categories
  const { data: products } = await supabase
    .from('products')
    .select(`
      *,
      product_variants (
        *
      ),
      atrocitee_categories!inner (
        *
      )
    `)
    .eq('published_status', true) as { data: ProductWithCategory[] | null };

  // Group products by category
  const productsByCategory = products?.reduce((acc: Record<string, Product[]>, product) => {
    const categoryId = product.atrocitee_categories.id;
    if (!acc[categoryId]) {
      acc[categoryId] = [];
    }
    acc[categoryId].push(product);
    return acc;
  }, {});

  // Return array of category pages to generate
  return categories?.map((category) => ({
    params: { category: category.slug },
    props: { 
      category,
      products: productsByCategory?.[category.id] || []
    }
  })) || [];
}) satisfies GetStaticPaths;

const { category, products } = Astro.props;
---

<Layout title={`${category.name} - Shop`}>
  {/* Category hero */}
  <div class="relative">
    <div class="absolute inset-0">
      <img
        class="w-full h-64 object-cover"
        src="https://via.placeholder.com/1920x384"
        alt={category.name}
      />
      <div class="absolute inset-0 bg-gray-900 bg-opacity-50"></div>
    </div>
    <div class="relative max-w-7xl mx-auto py-24 px-4 sm:py-32 sm:px-6 lg:px-8">
      <h1 class="text-4xl font-extrabold tracking-tight text-white sm:text-5xl lg:text-6xl">
        {category.name}
      </h1>
      {category.description && (
        <p class="mt-6 text-xl text-white max-w-3xl">
          {category.description}
        </p>
      )}
    </div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    {/* Products grid */}
    <div class="grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8">
      {products?.map((product) => (
        <div class="group relative">
          <div class="w-full min-h-80 bg-gray-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75">
            <img
              src={product.thumbnail_url || 'https://via.placeholder.com/300'}
              alt={product.name}
              class="w-full h-full object-center object-cover"
            />
          </div>
          <div class="mt-4 flex justify-between">
            <div>
              <h3 class="text-sm text-gray-700">
                <a href={`/shop/product/${product.slug}`}>
                  <span aria-hidden="true" class="absolute inset-0" />
                  {product.name}
                </a>
              </h3>
              <p class="mt-1 text-sm text-gray-500">{product.description}</p>
            </div>
            <p class="text-sm font-medium text-gray-900">
              ${product.atrocitee_base_price?.toFixed(2)}
            </p>
          </div>
        </div>
      ))}
    </div>

    {/* Show message if no products */}
    {(!products || products.length === 0) && (
      <div class="text-center py-12">
        <h3 class="text-lg font-medium text-gray-900">No products found</h3>
        <p class="mt-2 text-sm text-gray-500">
          Check back soon for new products in this category.
        </p>
      </div>
    )}
  </div>
</Layout> 
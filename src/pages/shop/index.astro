---
// @ts-nocheck - Disable TypeScript checking for Astro-specific attributes like 'class' vs 'className'
import Layout from '@layouts/Layout.astro';
import type { Database } from '@local-types/database/schema';
import { createClient } from '@lib/supabase/client';

// Enable prerendering
export const prerender = true;

interface ProductVariant {
  retail_price: number | null;
  mockup_settings?: {
    views: Array<{
      view: string;
      filename: string;
      url: string;
      webpUrl: string;
    }>;
  };
}

type Product = Database['public']['Tables']['products']['Row'] & {
  product_variants: ProductVariant[];
  charities?: Database['public']['Tables']['charities']['Row'] | null;
  imageUrl?: string;
  webpUrl?: string;
  atrocitee_featured?: boolean;
  atrocitee_category_id?: string | number;
  atrocitee_base_price?: number;
  thumbnail_url?: string;
};

type Category = Database['public']['Tables']['atrocitee_categories']['Row'];

// Fetch data in the frontmatter
const supabase = createClient();

// Get all active products with their variants and charity info
const { data: products = [], error: productsError } = await supabase
  .from('products')
  .select(`
    *,
    product_variants (
      retail_price,
      in_stock,
      stock_level,
      mockup_settings
    )
  `)
  .eq('published_status', true)
  .order('created_at', { ascending: false });

if (productsError) {
  console.error('Error fetching products:', productsError);
} else {
  console.log('Products data:', JSON.stringify(products, null, 2));
}

// Get all categories
const { data: categories = [], error: categoriesError } = await supabase
  .from('atrocitee_categories')
  .select('*')
  .eq('is_active', true);

if (categoriesError) {
  console.error('Error fetching categories:', categoriesError);
}

// Get featured products
const featuredProducts = products ? products.filter(p => p && p.atrocitee_featured === true) : [];

// Process products to get mockup images
const processedProducts = products ? products.map(product => {
  // Find the first variant with mockup settings
  const variantWithMockup = product.product_variants?.find((v: ProductVariant) => 
    v.mockup_settings?.views && v.mockup_settings.views.length > 0
  );
  
  // Get the front view mockup if available
  const frontMockup = variantWithMockup?.mockup_settings?.views?.find((v: {view: string}) => v.view === 'front');
  
  // If no front view, get the first available mockup
  const firstMockup = variantWithMockup?.mockup_settings?.views?.[0];
  
  // Use mockup image URL if available, otherwise fallback to thumbnail_url
  const imageUrl = frontMockup?.url || firstMockup?.url || product.thumbnail_url;
  const webpUrl = frontMockup?.webpUrl || firstMockup?.webpUrl;
  
  // Ensure we preserve the featured flag
  return {
    ...product,
    imageUrl,
    webpUrl,
    atrocitee_featured: product.atrocitee_featured === true
  };
}) : [];

// Debug logging
console.log('Products loaded:', products?.length || 0);
console.log('Categories loaded:', categories?.length || 0);
console.log('Featured products:', featuredProducts?.length || 0);

// Additional debug logging
if (products && products.length > 0) {
  console.log('Product details:');
  products.forEach((product, index) => {
    console.log(`Product ${index + 1}: ${product.name}`);
    console.log(`  - Published: ${product.published_status}`);
    console.log(`  - Featured: ${product.atrocitee_featured}`);
    console.log(`  - Category ID: ${product.atrocitee_category_id}`);
    console.log(`  - Has variants: ${product.product_variants?.length || 0}`);
  });
}

if (categories && categories.length > 0) {
  console.log('Category details:');
  categories.forEach((category, index) => {
    console.log(`Category ${index + 1}: ${category.name} (ID: ${category.id})`);
  });
}

// Additional debug logging for featured products
console.log('Featured products check:');
if (products) {
  products.forEach((product, index) => {
    console.log(`Product ${index + 1}: ${product.name}, Featured: ${product.atrocitee_featured}, Type: ${typeof product.atrocitee_featured}`);
  });
}

// Debug processed products with image URLs
console.log('Processed products with images:');
processedProducts.forEach((product, index) => {
  console.log(`Product ${index + 1}: ${product.name}`);
  console.log(`  - Image URL: ${product.imageUrl}`);
  console.log(`  - WebP URL: ${product.webpUrl || 'none'}`);
});
---

<Layout title="Shop">
  {/* Hero section */}
  <div class="relative">
    <div class="absolute inset-0">
      <img
        class="w-full h-64 object-cover"
        src="https://images.unsplash.com/photo-1525268771113-32d9e9021a97?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80"
        alt="Shop hero"
      />
      <div class="absolute inset-0 bg-gray-900 bg-opacity-50"></div>
    </div>
    <div class="relative max-w-7xl mx-auto py-24 px-4 sm:py-32 sm:px-6 lg:px-8">
      <h1 class="text-4xl font-extrabold tracking-tight text-white sm:text-5xl lg:text-6xl">
        Shop for a Cause
      </h1>
      <p class="mt-6 text-xl text-white max-w-3xl">
        Every purchase helps support charitable causes. Look good, feel good, do good.
      </p>
    </div>
  </div>

  <div class="min-h-screen bg-gray-50">
    <div class="flex">
      {/* Category Sidebar - Admin Style */}
      <div class="hidden lg:block lg:w-64 bg-white border-r border-gray-200">
        <div class="flex-1 flex flex-col min-h-0">
          <nav class="flex-1 space-y-1 pt-6" aria-label="Sidebar">
            <div class="px-3 py-2">
              <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider">
                Categories
              </h3>
            </div>
            <a
              href="/shop"
              class:list={[
                'group flex items-center px-3 py-2 text-sm font-medium rounded-md',
                !Astro.params.category ? 'bg-gray-200 text-gray-900' : 'text-gray-700 hover:bg-gray-50'
              ]}
              aria-current={!Astro.params.category ? 'page' : undefined}
            >
              <span class="truncate">All Products</span>
              <span class="ml-auto inline-block py-0.5 px-3 text-xs rounded-full bg-gray-100 text-gray-700">
                {processedProducts.length}
              </span>
            </a>
            {categories.map((category: Category) => {
              const categoryProducts = processedProducts.filter((p: Product) => p && p.atrocitee_category_id === category.id);
              console.log(`Category ${category.name} (ID: ${category.id}) has ${categoryProducts.length} products`);
              if (categoryProducts.length > 0) {
                categoryProducts.forEach(p => console.log(`  - ${p.name}, Category ID: ${p.atrocitee_category_id}`));
              }
              return (
                <a
                  href={`/shop/${category.slug}`}
                  class:list={[
                    'group flex items-center px-3 py-2 text-sm font-medium rounded-md',
                    'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
                  ]}
                >
                  <span class="truncate">{category.name}</span>
                  <span class="ml-auto inline-block py-0.5 px-3 text-xs rounded-full bg-gray-100 text-gray-700">
                    {categoryProducts.length}
                  </span>
                </a>
              );
            })}

            {/* Featured Filter */}
            {featuredProducts.length > 0 && (
              <div class="mt-8">
                <div class="px-3 py-2">
                  <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider">
                    Featured
                  </h3>
                </div>
                <a
                  href="#featured"
                  class="group flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 hover:text-gray-900 rounded-md"
                >
                  <span class="truncate">Featured Products</span>
                  <span class="ml-auto inline-block py-0.5 px-3 text-xs rounded-full bg-gray-100 text-gray-700">
                    {featuredProducts.length}
                  </span>
                </a>
              </div>
            )}
          </nav>
        </div>
      </div>

      {/* Main Content */}
      <div class="flex-1">
        <main>
          <div class="py-6">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              {/* Featured products */}
              {featuredProducts.length > 0 && (
                <div id="featured">
                  <h2 class="text-2xl font-extrabold tracking-tight text-gray-900">Featured Products</h2>
                  <div class="mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-3 xl:gap-x-8">
                    {processedProducts.filter((p: Product) => p && p.atrocitee_featured).map((product: Product) => {
                      console.log(`Rendering featured product: ${product.name}, Featured: ${product.atrocitee_featured}, Image: ${product.imageUrl}`);
                      return (
                        <div class="group relative">
                          <div class="w-full min-h-80 bg-gray-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75">
                            {product.webpUrl ? (
                              <picture>
                                <source srcset={product.webpUrl} type="image/webp" />
                                <img
                                  src={product.imageUrl || 'https://via.placeholder.com/300'}
                                  alt={product.name}
                                  class="w-full h-full object-center object-cover"
                                />
                              </picture>
                            ) : (
                              <img
                                src={product.imageUrl || 'https://via.placeholder.com/300'}
                                alt={product.name}
                                class="w-full h-full object-center object-cover"
                              />
                            )}
                          </div>
                          <div class="mt-4 flex justify-between">
                            <div>
                              <h3 class="text-sm text-gray-700">
                                <a href={`/shop/product/${product.slug}`}>
                                  <span aria-hidden="true" class="absolute inset-0" />
                                  {product.name}
                                </a>
                              </h3>
                              <p class="mt-1 text-sm text-gray-500">{product.description}</p>
                            </div>
                            <p class="text-sm font-medium text-gray-900">
                              ${product.atrocitee_base_price?.toFixed(2) || '0.00'}
                            </p>
                          </div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              )}

              {/* All products */}
              <div class="mt-12">
                <h2 class="text-2xl font-extrabold tracking-tight text-gray-900">All Products</h2>
                <div class="mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-3 xl:gap-x-8">
                  {processedProducts.map((product: Product) => (
                    <div class="group relative">
                      <div class="w-full min-h-80 bg-gray-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75">
                        {product.webpUrl ? (
                          <picture>
                            <source srcset={product.webpUrl} type="image/webp" />
                            <img
                              src={product.imageUrl || 'https://via.placeholder.com/300'}
                              alt={product.name}
                              class="w-full h-full object-center object-cover"
                            />
                          </picture>
                        ) : (
                          <img
                            src={product.imageUrl || 'https://via.placeholder.com/300'}
                            alt={product.name}
                            class="w-full h-full object-center object-cover"
                          />
                        )}
                      </div>
                      <div class="mt-4 flex justify-between">
                        <div>
                          <h3 class="text-sm text-gray-700">
                            <a href={`/shop/product/${product.slug}`}>
                              <span aria-hidden="true" class="absolute inset-0" />
                              {product.name}
                            </a>
                          </h3>
                          <p class="mt-1 text-sm text-gray-500">{product.description}</p>
                        </div>
                        <p class="text-sm font-medium text-gray-900">
                          ${product.atrocitee_base_price?.toFixed(2) || '0.00'}
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  </div>
</Layout> 